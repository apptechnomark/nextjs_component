{"code":"export const emitter = (() => {\r\n    const events = new Map();\r\n    return {\r\n        on(event, callback) {\r\n            if (!events.has(event))\r\n                events.set(event, []);\r\n            events.get(event).push(callback);\r\n        },\r\n        emit(event, args) {\r\n            if (!events.has(event))\r\n                return;\r\n            events.get(event).forEach((callback) => callback(args));\r\n        },\r\n        off() {\r\n            events.clear();\r\n        }\r\n    };\r\n})();\r\n//# sourceMappingURL=emitter.js.map","references":["/home/tmdev/HD/Libraries/toast/React/Toast-react/toast/toastlib/src/types/index.ts"],"map":"{\"version\":3,\"file\":\"emitter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/emitter.ts\"],\"names\":[],\"mappings\":\"AAYA,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,GAAY,EAAE;IACpC,MAAM,MAAM,GAAG,IAAI,GAAG,EAAE,CAAA;IAExB,OAAO;QACL,EAAE,CAAU,KAAa,EAAE,QAAoB;YAC7C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC;gBAAE,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;YAC7C,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAClC,CAAC;QAED,IAAI,CAAU,KAAa,EAAE,IAAO;YAClC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC;gBAAE,OAAM;YAC9B,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,QAAiB,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA;QAClE,CAAC;QAED,GAAG;YACD,MAAM,CAAC,KAAK,EAAE,CAAA;QAChB,CAAC;KACF,CAAA;AACH,CAAC,CAAC,EAAE,CAAA\"}","dts":{"name":"/home/tmdev/HD/Libraries/toast/React/Toast-react/toast/toastlib/utils/emitter.d.ts","writeByteOrderMark":false,"text":"import { Events } from '../types';\r\nexport declare type Handler<T = any> = (event: T) => void;\r\ninterface Emitter {\r\n    on<T = any>(event: Events, handler: Handler<T>): void;\r\n    emit<T = any>(event: Events, args?: T): void;\r\n    off(): void;\r\n}\r\nexport declare const emitter: Emitter;\r\nexport {};\r\n"}}
