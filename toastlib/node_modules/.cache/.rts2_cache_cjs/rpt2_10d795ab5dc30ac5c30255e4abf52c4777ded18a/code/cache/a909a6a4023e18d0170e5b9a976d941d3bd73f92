{"code":"export var Events;\r\n(function (Events) {\r\n    Events[\"SHOW\"] = \"show\";\r\n    Events[\"HIDE\"] = \"hide\";\r\n    Events[\"HIDE_ALL\"] = \"hideAll\";\r\n})(Events || (Events = {}));\r\n//# sourceMappingURL=types.js.map","references":[],"map":"{\"version\":3,\"file\":\"types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/types/types.ts\"],\"names\":[],\"mappings\":\"AAAA,MAAM,CAAN,IAAY,MAIX;AAJD,WAAY,MAAM;IAChB,uBAAa,CAAA;IACb,uBAAa,CAAA;IACb,8BAAoB,CAAA;AACtB,CAAC,EAJW,MAAM,KAAN,MAAM,QAIjB\"}","dts":{"name":"/home/tmdev/HD/Libraries/toast/React/Toast-react/toast/toastlib/types/types.d.ts","writeByteOrderMark":false,"text":"export declare enum Events {\r\n    SHOW = \"show\",\r\n    HIDE = \"hide\",\r\n    HIDE_ALL = \"hideAll\"\r\n}\r\nexport declare type Type = 'default' | 'success' | 'error' | 'info' | 'warning';\r\nexport declare type Position = 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\r\nexport declare type ToastContent = string;\r\nexport declare type ToastConfig = {\r\n    backgroundColor?: string;\r\n    color?: string;\r\n};\r\nexport interface Toast {\r\n    id: string;\r\n    content: ToastContent;\r\n    type: Type;\r\n    config?: ToastConfig;\r\n}\r\nexport interface ToastProvider {\r\n    content: ToastContent;\r\n    config?: ToastConfig;\r\n}\r\n"}}
