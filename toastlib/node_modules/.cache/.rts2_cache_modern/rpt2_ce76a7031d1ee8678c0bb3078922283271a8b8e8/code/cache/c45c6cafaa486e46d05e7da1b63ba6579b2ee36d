{"code":"import { useReducer } from 'react';\r\nconst initialState = {\r\n    toasts: [],\r\n};\r\nconst toastReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            return {\r\n                ...state,\r\n                toasts: [...state.toasts, action.toast],\r\n            };\r\n        case 'REMOVE': {\r\n            return {\r\n                ...state,\r\n                toasts: [...state.toasts.filter(toast => toast.id !== action.id)],\r\n            };\r\n        }\r\n        case 'REMOVE_ALL':\r\n            return {\r\n                ...state,\r\n                toasts: [],\r\n            };\r\n        default:\r\n            throw new Error();\r\n    }\r\n};\r\nexport const useToast = () => {\r\n    const [state, dispatch] = useReducer(toastReducer, initialState);\r\n    return { ...state, dispatch };\r\n};\r\n//# sourceMappingURL=useToast.js.map","references":["/home/tmdev/HD/Libraries/Toastify-react/toastlib/node_modules/@types/react/index.d.ts","/home/tmdev/HD/Libraries/Toastify-react/toastlib/src/types/index.ts"],"map":"{\"version\":3,\"file\":\"useToast.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/hooks/useToast.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAA;AAalC,MAAM,YAAY,GAAW;IAC3B,MAAM,EAAE,EAAE;CACX,CAAA;AAED,MAAM,YAAY,GAAG,CAAC,KAAa,EAAE,MAAe,EAAU,EAAE;IAC9D,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,KAAK;YACR,OAAO;gBACL,GAAG,KAAK;gBACR,MAAM,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC;aACxC,CAAA;QACH,KAAK,QAAQ,CAAC,CAAC;YACb,OAAO;gBACL,GAAG,KAAK;gBACR,MAAM,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC;aAClE,CAAA;SACF;QACD,KAAK,YAAY;YACf,OAAO;gBACL,GAAG,KAAK;gBACR,MAAM,EAAE,EAAE;aACX,CAAA;QACH;YACE,MAAM,IAAI,KAAK,EAAE,CAAA;KACpB;AACH,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,EAAE;IAC3B,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,UAAU,CAAC,YAAY,EAAE,YAAY,CAAC,CAAA;IAEhE,OAAO,EAAE,GAAG,KAAK,EAAE,QAAQ,EAAE,CAAA;AAC/B,CAAC,CAAA\"}","dts":{"name":"/home/tmdev/HD/Libraries/Toastify-react/toastlib/hooks/useToast.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { Toast } from '../types';\r\nexport declare type TAction = {\r\n    type: 'ADD';\r\n    toast: Toast;\r\n} | {\r\n    type: 'REMOVE';\r\n    id: string;\r\n} | {\r\n    type: 'REMOVE_ALL';\r\n};\r\nexport declare const useToast: () => {\r\n    dispatch: import(\"react\").Dispatch<TAction>;\r\n    toasts: Toast[];\r\n};\r\n"}}
