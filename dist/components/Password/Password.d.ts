import React, { ChangeEvent, FocusEvent, KeyboardEvent, MouseEvent } from "react";
interface PasswordProps {
    label?: string;
    className?: string;
    validate?: boolean;
    errorMessage?: string;
    minlength?: string;
    maxlength?: string;
    autoComplete?: string;
    autoFocus?: boolean;
    disabled?: boolean;
    form?: string;
    name?: string;
    pattern?: string;
    placeholder?: string;
    readOnly?: boolean;
    size?: number;
    value?: string;
    onBlur?: (event: FocusEvent<HTMLInputElement>) => void;
    onChange?: (event: ChangeEvent<HTMLInputElement>) => void;
    onFocus?: (event: FocusEvent<HTMLInputElement>) => void;
    onKeyDown?: (event: KeyboardEvent<HTMLInputElement>) => void;
    onKeyUp?: (event: KeyboardEvent<HTMLInputElement>) => void;
    onKeyPress?: (event: KeyboardEvent<HTMLInputElement>) => void;
    onInput?: (event: Event) => void;
    onClick?: (event: MouseEvent<HTMLInputElement>) => void;
    onMouseDown?: (event: MouseEvent<HTMLInputElement>) => void;
    onMouseUp?: (event: MouseEvent<HTMLInputElement>) => void;
    onMouseEnter?: (event: MouseEvent<HTMLInputElement>) => void;
    onMouseLeave?: (event: MouseEvent<HTMLInputElement>) => void;
    onMouseOver?: (event: MouseEvent<HTMLInputElement>) => void;
    onMouseOut?: (event: MouseEvent<HTMLInputElement>) => void;
    onInvalid?: (event: Event) => void;
    onReset?: (event: Event) => void;
    onSubmit?: (event: Event) => void;
    getValue: (arg1: string) => void;
    hasError?: boolean;
    props?: any;
}
declare const Password: React.FC<PasswordProps>;
export { Password };
